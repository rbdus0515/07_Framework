<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="commentMapper">

	
	<!-- Board DTO에 대한 resultMap -->
	<resultMap type="Board" id="board_rm">
	
		<id property="boardNo" column="BOARD_NO"/>
		
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="boardCreateDate" column="B_CREATE_DATE"/>
		<result property="boardUpdateDate" column="B_UPDATE_DATE"/>
		<result property="readCount" column="READ_COUNT"/>
		<result property="commentCount" column="COMMENT_COUNT"/>
		<result property="likeCount" column="LIKE_COUNT"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="profileImage" column="PROFILE_IMG"/>
		
		<result property="thumbnail" column="THUMBNAIL"/>
		
		<!-- collection 태그
			select로 조회된 결과를 컬렉션(List)에 담아
			지정된 필드에 세팅
			
			property : List를 담을 DTO의 필드명
			select : 실행할 select의 id
			column : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			javaType : List(컬렉션)의 타입을 지정
			ofType : List(컬렉션)의 제네릭(타입 제한) 지정
		 -->
		<collection property="imageList"
					select="selectImageList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="BoardImage"
		 />
		 
		 <collection property="commentList"
					select="selectCommentList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="Comment"
		 />
	</resultMap>
	
	
	<!-- BoardImage resultMap -->
	<resultMap type="BoardImage" id="boardImage_rm">
		<id property="imageNo" column="IMG_NO"/>
		<result property="imagePath" column="IMG_PATH"/>
		<result property="imageReName" column="IMG_RENAME"/>
		<result property="imageOriginal" column="IMG_ORIGINAL"/>
		<result property="imageOrder" column="IMG_ORDER"/>
		<result property="boardNo" column="BOARD_NO"/>
	</resultMap>
	
	
	<!-- Comment resultMap -->
	<resultMap type="Comment" id="comment_rm">
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="commentContent" column="COMMENT_CONTENT"/>
		<result property="commentCreateDate" column="C_CREATE_DATE"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="commentDeleteFlag" column="COMMENT_DEL_FL"/>
		<result property="parentNo" column="PARENT_NO"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="profileImage" column="PROFILE_IMG"/>
	</resultMap>
	
	
	  	<!-- 특정 게시글 댓글 조회(바뀔 예정) -->
	  	<select id="selectCommentList" resultMap="comment_rm">
	  		SELECT LEVEL, C.* FROM
				(SELECT COMMENT_NO, COMMENT_CONTENT,
				TO_CHAR(C_CREATE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') C_CREATE_DATE,
				BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL
				FROM "COMMENT"
				JOIN MEMBER USING(MEMBER_NO)
				WHERE BOARD_NO = #{boardNo}) C
			WHERE COMMENT_DEL_FL = 'N'
			START WITH PARENT_NO IS NULL
			CONNECT BY PRIOR COMMENT_NO = PARENT_NO
			ORDER SIBLINGS BY COMMENT_NO
	  	</select>
  	
	
  	  	<!-- 댓글 등록 -->
	  	<insert id="insertComment" parameterType="Comment" useGeneratedKeys="true">
				INSERT INTO "COMMENT"
				VALUES(SEQ_COMMENT_NO.NEXTVAL,
						#{commentcontent},
						DEFAULT,
						DEFAULT,
						#{boardNo},
						#{memberNo},
						<!-- 동적 sql : if문 -->
						<!-- 부모 댓글 -->
						<if test="parentNo == 0"> NULL </if>
						<!-- 자식 댓글 -->
						<if test="parentNo != 0"> #{parentNo} </if>
						 )
	  	</insert>
  	
  		<!-- 댓글 삭제 -->
  		<update id="deleteComment">
  			UPDATE "COMMENT"
			SET COMMENT_DEL_FL = 'Y'
			WHERE COMMENT_NO = #{commentNo}
  		</update>
  		
  		<!-- 댓글 수정 -->
		<update id="updateComment">
			
		</update>


</mapper>





